{"version":3,"sources":["images/temporada1.jpg","images/temporada2.jpg","components/EpisodeList.js","components/EpisodeDetail.js","components/Input.js","App.js","services/fetchRickMorty.js","index.js"],"names":["module","exports","EpisodeList","props","episodes","userInput","userName","reset","className","filter","ep","episode","toUpperCase","includes","na","name","map","item","t","split","temporada1","temporada2","key","id","src","alt","to","onClick","EpisodeDetail","routerProps","episodeId","parseInt","match","params","length","air_date","Input","getUserInput","getUserName","type","onChange","htmlFor","App","state","bind","this","getEpisodes","fetch","then","response","json","data","setState","results","event","value","currentTarget","window","scrollTo","exact","path","render","React","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.72ca8169.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/temporada1.36297dfd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/temporada2.c257dbe9.jpg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport temporada1 from '../images/temporada1.jpg';\nimport temporada2 from '../images/temporada2.jpg';\n\nconst EpisodeList = props => {\n\tconst { episodes, userInput, userName, reset } = props;\n\n\treturn (\n\t\t<div className=\"episodes-list row\">\n\t\t\t{episodes\n\t\t\t\t.filter(ep => ep.episode.toUpperCase().includes(userInput.toUpperCase()))\n\t\t\t\t.filter(na => na.name.toUpperCase().includes(userName.toUpperCase()))\n\t\t\t\t.map(item => {\n\t\t\t\t\tconst temp = item.episode.split(\"E\");\n\t\t\t\t\tlet t = '';\n\t\t\t\t\tif (temp[0] === 'S01') {\n\t\t\t\t\t\tt = temporada1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt = temporada2;\n\t\t\t\t\t}\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className=\"episode-name col s4\" key={item.id}>\n\n\t\t\t\t\t\t\t<div className=\"card light-blue\">\n\t\t\t\t\t\t\t\t<div className=\"card-image\">\n\t\t\t\t\t\t\t\t\t<img src={t} alt=\"logot1\" className=\"logo\" />\n\t\t\t\t\t\t\t\t\t<span className=\"card-title black-text\">{item.episode}</span>\n\t\t\t\t\t\t\t\t\t<Link to={`/detail/${item.id}`} className=\"detail\" onClick={reset}>\n\t\t\t\t\t\t\t\t\t\t<a className=\"btn-floating halfway-fab waves-effect waves-light yellow accent-2\"><i className=\"material-icons black-text\">add</i></a>\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"card-content\">\n\t\t\t\t\t\t\t\t\t<p className=\"episode-name\">{item.name}</p>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t})\n\n\t\t\t}\n\t\t</div>\n\t);\n};\n\nEpisodeList.propTypes = {\n\tepisodes: PropTypes.arrayOf(PropTypes.object).isRequired,\n\tuserInput: PropTypes.string.isRequired,\n\tuserName: PropTypes.string.isRequired,\n\treset: PropTypes.func.isRequired\n};\n\nexport default EpisodeList;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst EpisodeDetail = props => {\n\n\tconst { routerProps, episodes, reset } = props;\n\tconst episodeId = parseInt(routerProps.match.params.episodeId);\n\n\tif (episodeId > episodes.length) {\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"episode-name col s12\">\n\t\t\t\t\t\t<div className=\"card blue-grey\">\n\t\t\t\t\t\t\t<div className=\"card-content\">\n\t\t\t\t\t\t\t\t<p className=\"black-text\">El número del detalle excede del número de episodios.</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<Link to={`/`} className=\"\">\n\t\t\t\t\t\t\t\t<p className=\"back white-text center-align\" onClick={reset}>Volver</p>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tconst episode = episodes.filter(item => item.id === episodeId);\n\n\tif (episode[0]) {\n\t\tconst { name, air_date } = episode[0];\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"episode-name col s12\">\n\n\t\t\t\t\t\t<div className=\"card blue-grey\">\n\t\t\t\t\t\t\t<div className=\"card-content\">\n\t\t\t\t\t\t\t\t<p className=\"episode-name\">Nombre de episodio: {name}</p>\n\t\t\t\t\t\t\t\t<p className=\"air-date\">Fecha de emisión: {air_date}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<Link to={`/`} className=\"\">\n\t\t\t\t\t\t\t\t<p className=\"back white-text center-align\" onClick={reset}>Volver</p>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n};\n\nEpisodeDetail.propTypes = {\n\trouterProps: PropTypes.object.isRequired,\n\tepisodes: PropTypes.arrayOf(PropTypes.object).isRequired,\n\treset: PropTypes.func.isRequired\n};\n\nexport default EpisodeDetail;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Input = props => {\n    const { getUserInput, getUserName } = props;\n\n    return(\n        <div className=\"app__input row\">\n            <div className=\"input-field col s6\">\n                <i className=\"material-icons prefix white-text\">local_movies</i>\n                <input type=\"text\" className=\"validate white-text\" id=\"filter\" onChange={getUserInput} />\n                <label htmlFor=\"filter\" className=\"active\">Filtrar por número de episodio</label>\n            </div>\n            <div className=\"input-field col s6\">\n                <i className=\"material-icons prefix white-text\">search</i>\n                <input type=\"text\" className=\"validate white-text\" id=\"filter\" onChange={getUserName} />\n                <label htmlFor=\"filter\" className=\"active\">Filtrar por nombre de episodio</label>\n            </div>\n        </div>\n    );\n};\n\nInput.propTypes = {\n    getUserInput: PropTypes.func.isRequired,\n    getUserName: PropTypes.func.isRequired\n};\n\nexport default Input;","import React, { Fragment } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { fetchEpisodes } from './services/fetchRickMorty';\nimport EpisodeList from './components/EpisodeList';\nimport EpisodeDetail from './components/EpisodeDetail';\nimport Input from './components/Input';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      episodes: [],\n      userInput: '',\n      userName: ''\n    }\n\n    this.getUserInput = this.getUserInput.bind(this);\n    this.getUserName = this.getUserName.bind(this);\n    this.reset = this.reset.bind(this);\n\n  }\n\n  componentDidMount() {\n    this.getEpisodes();\n  }\n\n  getEpisodes() {\n    fetchEpisodes()\n      .then(data => {\n        this.setState({\n          episodes: data.results\n        })\n      })\n  }\n\n  getUserInput(event) {\n    const value = event.currentTarget.value;\n\n    this.setState({\n      userInput: value\n    })\n  }\n\n  getUserName(event) {\n    const value = event.currentTarget.value;\n\n    this.setState({\n      userName: value\n    })\n  }\n\n  reset() {\n    window.scrollTo(0, 0);\n    this.setState({\n      userInput: '',\n      userName: ''\n    })\n  }\n\n  render() {\n\n    return (\n      <div className=\"app\">\n        <header className=\"app__header\">\n          <h1 className=\"header__title\">Rick and Morty</h1>\n        </header>\n\n        <main className=\"app__main\">\n\n          <Switch>\n\n            <Route exact path='/' render={() => {\n              return (\n                <Fragment>\n                  <Input\n                    getUserInput={this.getUserInput}\n                    getUserName={this.getUserName}\n                  />\n                  <EpisodeList\n                    episodes={this.state.episodes}\n                    userInput={this.state.userInput}\n                    userName={this.state.userName}\n                    reset={this.reset}\n                  />\n                </Fragment>\n              );\n            }}\n            />\n\n            <Route path='/detail/:episodeId' render={routerProps => {\n              return (\n                <EpisodeDetail\n                  routerProps={routerProps}\n                  episodes={this.state.episodes}\n                  reset={this.reset}\n                />\n              );\n            }}\n            />\n\n          </Switch>\n\n        </main>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const endpoint = 'https://rickandmortyapi.com/api/episode';\n\nconst fetchEpisodes = () => {\n    return fetch(endpoint).then(response => response.json());\n};\n\nexport {fetchEpisodes};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n"],"sourceRoot":""}